<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.demo.Service.SinnerServiceTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-01-08T00:26:34" hostname="DESKTOP-V3NC3N2" time="1.093">
  <properties/>
  <testcase name="testProcessAndSaveData()" classname="com.example.demo.Service.SinnerServiceTest" time="1.093"/>
  <system-out><![CDATA[09:26:28.774 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.demo.Service.SinnerServiceTest]: SinnerServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
09:26:28.924 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.demo.DemoApplication for test class com.example.demo.Service.SinnerServiceTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.1)

2024-01-08T09:26:29.393+09:00  INFO 13476 --- [    Test worker] c.e.demo.Service.SinnerServiceTest       : Starting SinnerServiceTest using Java 17.0.7 with PID 13476 (started by 김지명 in C:\Spring\LimbusDeckMaker)
2024-01-08T09:26:29.395+09:00  INFO 13476 --- [    Test worker] c.e.demo.Service.SinnerServiceTest       : No active profile set, falling back to 1 default profile: "default"
2024-01-08T09:26:30.253+09:00  INFO 13476 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-08T09:26:30.335+09:00  INFO 13476 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 3 JPA repository interfaces.
2024-01-08T09:26:30.887+09:00  INFO 13476 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-08T09:26:30.966+09:00  INFO 13476 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-01-08T09:26:31.020+09:00  INFO 13476 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-01-08T09:26:31.724+09:00  INFO 13476 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-08T09:26:31.804+09:00  INFO 13476 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-01-08T09:26:32.472+09:00  INFO 13476 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6141647f
2024-01-08T09:26:32.476+09:00  INFO 13476 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-01-08T09:26:33.800+09:00  INFO 13476 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-08T09:26:33.804+09:00  INFO 13476 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-08T09:26:34.490+09:00  WARN 13476 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-01-08T09:26:34.966+09:00  INFO 13476 --- [    Test worker] c.e.demo.Service.SinnerServiceTest       : Started SinnerServiceTest in 5.85 seconds (process running for 7.239)
2024-01-08T09:26:35.733+09:00  INFO 13476 --- [    Test worker] com.example.demo.Service.SinnerService   : Ego Skill mental->Sync3Info(skillInfo=SkillInfo(power=38, mentalConsume=10, atkType=참격, resource=탐식, skillPower=14, coinPower=15, atkWeight=1, coinHitInfo=CoinEffectInfo(coinDefEffect=, coinHitEffect=[앞면 적중시] 파열 12 부여
[앞면 적중시] 정신력 10 감소
[뒷면 적중시] 정신력 10 회복)), cost=[1, 0, 0, 3, 0, 0, 0])
2024-01-08T09:26:35.740+09:00  INFO 13476 --- [    Test worker] com.example.demo.Service.SinnerService   : Ego Skill mental->Sync3Info(skillInfo=SkillInfo(power=36, mentalConsume=20, atkType=타격, resource=분노, skillPower=28, coinPower=-8, atkWeight=1, coinHitInfo=CoinEffectInfo(coinDefEffect=대상의 체력이 25% 미만일 때 피해량 +20%, coinHitEffect=[적 처치 시] 다음 턴에 공격 위력 증가 1 얻음
아군 전체 최대 체력의 15%만큼 체력 회복)), cost=[3, 2, 0, 0, 0, 0, 0])
2024-01-08T09:26:35.740+09:00  INFO 13476 --- [    Test worker] com.example.demo.Service.SinnerService   : Ego Skill mental->Sync3Info(skillInfo=SkillInfo(power=33, mentalConsume=15, atkType=타격, resource=색욕, skillPower=18, coinPower=-8, atkWeight=3, coinHitInfo=CoinEffectInfo(coinDefEffect=[피아식별불가]
체력이 가장 낮은 대상 공격
대상이 아군인 경우, 피해량이 항상 0으로 고정, coinHitEffect=[앞면 적중시] 대상이 아군인 경우, 자신의 최대 체력의 10%만큼 대상의 체력 회복
[뒷면 적중시] 화상 7 부여. 대상이 아군인 경우, 다음 턴에 E.G.O 자원 획득량+ 1, 신속 2 부여)), cost=[3, 2, 0, 1, 0, 0, 0])
2024-01-08T09:26:35.742+09:00  INFO 13476 --- [    Test worker] com.example.demo.Service.SinnerService   : Ego Skill mental->Sync3Info(skillInfo=SkillInfo(power=33, mentalConsume=25, atkType=참격, resource=탐식, skillPower=18, coinPower=6, atkWeight=3, coinHitInfo=CoinEffectInfo(coinDefEffect=[공격 시작 전] 자신의 체력이 50% 미만이면, 공격 가중치 +1, coinHitEffect=[앞면 적중시] 파열 3 부여
[적중시] 현재 체력 비율이 가장 낮은 아군 2명의 체력을 최대 체력의 12%만큼 회복)), cost=[0, 1, 0, 4, 2, 0, 0])
2024-01-08T09:26:35.743+09:00  INFO 13476 --- [    Test worker] com.example.demo.Service.SinnerService   : Ego Skill mental->Sync3Info(skillInfo=SkillInfo(power=40, mentalConsume=25, atkType=타격, resource=색욕, skillPower=26, coinPower=-10, atkWeight=3, coinHitInfo=CoinEffectInfo(coinDefEffect=[공격 시작 전] (색욕  공명 수)가 4 이상이면, 공격 가중치 +1, coinHitEffect=[적중시] 대상에게 화상이 없으면 화상 4 부여
[적중시] 화상 4 부여)), cost=[2, 5, 0, 0, 0, 0, 1])
Hibernate: 
    select
        s1_0.id,
        s1_0.character,
        s1_0.image 
    from
        sinner s1_0 
    where
        s1_0.id=?
Hibernate: 
    select
        e1_0.id,
        es1_0.id,
        es1_0.construe_level,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power,
        e1_0.grade,
        e1_0.image,
        e1_0.name,
        e1_0.obtaining_method,
        e1_0.release_date,
        e1_0.resistance,
        e1_0.sinner_id,
        e1_0.passive,
        e1_0.passive_name 
    from
        ego e1_0 
    left join
        ego_skill es1_0 
            on e1_0.id=es1_0.ego_id 
    where
        e1_0.id=?
Hibernate: 
    insert 
    into
        ego
        (grade, image, name, obtaining_method, release_date, resistance, sinner_id, passive, passive_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        es1_0.id,
        es1_0.construe_level,
        es1_0.ego_id,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power 
    from
        ego_skill es1_0 
    where
        es1_0.id=?
Hibernate: 
    insert 
    into
        ego_skill
        (construe_level, ego_id, image, name, resistance, cost, atk_type, atk_weight, coin_def_effect, coin_hit_effect, coin_power, mental_consume, power, resource, skill_power) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        e1_0.id,
        es1_0.id,
        es1_0.construe_level,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power,
        e1_0.grade,
        e1_0.image,
        e1_0.name,
        e1_0.obtaining_method,
        e1_0.release_date,
        e1_0.resistance,
        e1_0.sinner_id,
        e1_0.passive,
        e1_0.passive_name 
    from
        ego e1_0 
    left join
        ego_skill es1_0 
            on e1_0.id=es1_0.ego_id 
    where
        e1_0.id=?
Hibernate: 
    insert 
    into
        ego
        (grade, image, name, obtaining_method, release_date, resistance, sinner_id, passive, passive_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        es1_0.id,
        es1_0.construe_level,
        es1_0.ego_id,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power 
    from
        ego_skill es1_0 
    where
        es1_0.id=?
Hibernate: 
    insert 
    into
        ego_skill
        (construe_level, ego_id, image, name, resistance, cost, atk_type, atk_weight, coin_def_effect, coin_hit_effect, coin_power, mental_consume, power, resource, skill_power) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        e1_0.id,
        es1_0.id,
        es1_0.construe_level,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power,
        e1_0.grade,
        e1_0.image,
        e1_0.name,
        e1_0.obtaining_method,
        e1_0.release_date,
        e1_0.resistance,
        e1_0.sinner_id,
        e1_0.passive,
        e1_0.passive_name 
    from
        ego e1_0 
    left join
        ego_skill es1_0 
            on e1_0.id=es1_0.ego_id 
    where
        e1_0.id=?
Hibernate: 
    insert 
    into
        ego
        (grade, image, name, obtaining_method, release_date, resistance, sinner_id, passive, passive_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        es1_0.id,
        es1_0.construe_level,
        es1_0.ego_id,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power 
    from
        ego_skill es1_0 
    where
        es1_0.id=?
Hibernate: 
    insert 
    into
        ego_skill
        (construe_level, ego_id, image, name, resistance, cost, atk_type, atk_weight, coin_def_effect, coin_hit_effect, coin_power, mental_consume, power, resource, skill_power) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        e1_0.id,
        es1_0.id,
        es1_0.construe_level,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power,
        e1_0.grade,
        e1_0.image,
        e1_0.name,
        e1_0.obtaining_method,
        e1_0.release_date,
        e1_0.resistance,
        e1_0.sinner_id,
        e1_0.passive,
        e1_0.passive_name 
    from
        ego e1_0 
    left join
        ego_skill es1_0 
            on e1_0.id=es1_0.ego_id 
    where
        e1_0.id=?
Hibernate: 
    insert 
    into
        ego
        (grade, image, name, obtaining_method, release_date, resistance, sinner_id, passive, passive_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        es1_0.id,
        es1_0.construe_level,
        es1_0.ego_id,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power 
    from
        ego_skill es1_0 
    where
        es1_0.id=?
Hibernate: 
    insert 
    into
        ego_skill
        (construe_level, ego_id, image, name, resistance, cost, atk_type, atk_weight, coin_def_effect, coin_hit_effect, coin_power, mental_consume, power, resource, skill_power) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        e1_0.id,
        es1_0.id,
        es1_0.construe_level,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power,
        e1_0.grade,
        e1_0.image,
        e1_0.name,
        e1_0.obtaining_method,
        e1_0.release_date,
        e1_0.resistance,
        e1_0.sinner_id,
        e1_0.passive,
        e1_0.passive_name 
    from
        ego e1_0 
    left join
        ego_skill es1_0 
            on e1_0.id=es1_0.ego_id 
    where
        e1_0.id=?
Hibernate: 
    insert 
    into
        ego
        (grade, image, name, obtaining_method, release_date, resistance, sinner_id, passive, passive_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        es1_0.id,
        es1_0.construe_level,
        es1_0.ego_id,
        es1_0.image,
        es1_0.name,
        es1_0.resistance,
        es1_0.cost,
        es1_0.atk_type,
        es1_0.atk_weight,
        es1_0.coin_def_effect,
        es1_0.coin_hit_effect,
        es1_0.coin_power,
        es1_0.mental_consume,
        es1_0.power,
        es1_0.resource,
        es1_0.skill_power 
    from
        ego_skill es1_0 
    where
        es1_0.id=?
Hibernate: 
    insert 
    into
        ego_skill
        (construe_level, ego_id, image, name, resistance, cost, atk_type, atk_weight, coin_def_effect, coin_hit_effect, coin_power, mental_consume, power, resource, skill_power) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
